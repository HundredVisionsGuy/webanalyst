Algorithms for checking the styles applied to each page in a project
and in correct order {
    NOTES: {
        * We must only grab the stylesheets as objects once we have the master list of pages and which CSS they contain.
        * We do want the CSS from styletags but in string form to compare before converting to a stylesheet object.
        * We should get the styletag contents when digging through the pages, since we're already there.
        * Do all pages link to the same stylesheets?
        * Does each page link in the same order?
        Questions/Thoughts: {
            - should we get the number of stylesheets for each page?
            - Loop through list of all stylesheets (in the project folder)
                *
        }
    }

    How to check up on this {
        * compare each html doc to see if it links to all CSS files {
            - means we need a list of all CSS files: self.css_files
            - compare that against each of the project_css_by_html_doc html docs
            - number of files ending with .css should match {
                Loop through each css file and check to see if it's listed
                If any are not, return False
            }
        }
    }

    What should the end product look like? What do we want out of this algorithm?
    how about a list of pages and the styles being applied as indicated by (filename or styletag) and in the order in which they appear.
    Dictionary?
    project_css_by_html_doc
    {"html_page": ["filename.css", "styletag=CSS_CODE_AS_STRING", "filename.css"],
    "html_page2": ["filename.css", "styletag=CSS_CODE_AS_STRING", "filename.css"]}

    SET pages to all html docs in a project folder
    GET markup from each page
    FOREACH page in pages
        Append page title to dictionary
        GET tags from the HEAD
            CALL get_css_elements() with tags
        GET style tags from the BODY
            CALL get_css_elements() with tags

    DEFINE get_css_elements
        SET css_elements as list
        FOREACH tag in tags
            IF tag is LINK
                IF href ends with .CSS
                    GET the filename
                    GET the contents
                    INIT Stylesheet object with contents
                    APPEND tag to css_elements
            IF tag style
                APPEND tag to css_elements
        RETURN css_elements

    DEFINE check_for_same_css_files:
        FOREACH css_file in css_files
            FOREACH html_doc in project_css_by_html_doc
                IF css_file not in html_doc
                    RETURN False
        RETURN True
}

Notes on stylesheet objects {
    * We need to convert each css file and each style tag content into a stylesheet object
    * We need to know which files are linking to them (especially with the style tags)
    * We do NOT want to duplicate stylesheet objects, so they must come first in the data structure
    * Questions/Thoughts: {
        - Do we want to make a dictionary where the keys are the stylesheets and the values are the pages where they are found?
            + If so, do we want to rank their position in the cascade?
    }
}
